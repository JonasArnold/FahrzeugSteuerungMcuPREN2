#include "display.h"
#include "configuration.h"
#include <SPI.h>
#include <Wire.h>               // Only needed for Arduino 1.6.5 and earlier
#include "SSD1306Wire.h"        // legacy: #include "SSD1306.h"

// Initialize the OLED display using Arduino Wire:
SSD1306Wire display(0x3c, 5, 4);

// 'logo_small', 90x39px
#ifdef USING_DISPLAY
static const uint8_t logo_small[512] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x50, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xf8, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0xf0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0x13, 0xe0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xbf, 0x80, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x18, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x19, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1a, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x50, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xa1, 0x00, 0x00, 0x01, 0x80, 0x58, 0x00, 0x00, 0x00, 0x00, 0x30, 
  0xf9, 0x00, 0x02, 0x03, 0xc0, 0x68, 0x00, 0x40, 0x00, 0x00, 0xf8, 
  0xcd, 0x00, 0x03, 0x02, 0x60, 0x40, 0x00, 0x40, 0x00, 0x00, 0xc8, 
  0x8d, 0x10, 0x03, 0x06, 0x40, 0x40, 0x00, 0x04, 0x00, 0x40, 0x8c, 
  0xc9, 0x3c, 0xf7, 0x82, 0xc0, 0x63, 0x6f, 0x4f, 0x24, 0xe0, 0xc8, 
  0xfb, 0x65, 0x93, 0x03, 0x80, 0x72, 0x6c, 0x49, 0x65, 0x90, 0xcc, 
  0xd1, 0x04, 0x93, 0x01, 0x90, 0x6b, 0x6c, 0x49, 0x24, 0xc0, 0x78, 
  0xc3, 0x1d, 0x92, 0x07, 0xb0, 0x42, 0x6c, 0x59, 0x64, 0xe0, 0x0c, 
  0xc1, 0x34, 0x93, 0x06, 0xf0, 0x63, 0x6c, 0x49, 0xa4, 0x30, 0x08, 
  0x83, 0x65, 0x92, 0x06, 0x60, 0x42, 0x6c, 0x59, 0x64, 0xb0, 0xc8, 
  0xc1, 0x3c, 0x93, 0x06, 0xf0, 0x63, 0x6c, 0x4d, 0x35, 0xb0, 0xd8, 
  0x81, 0x34, 0x91, 0x83, 0x90, 0x43, 0x44, 0x46, 0x34, 0xe0, 0x70, 
};
#endif


void Display_Init()
{
#ifdef USING_DISPLAY
  // Initialising the UI will init the display too.
  display.init();

  display.flipScreenVertically();
  display.setFont(ArialMT_Plain_10);

  Serial.println("Display initialized.");
#endif
}

void Display_SetupBase()
{
#ifdef USING_DISPLAY
  display.drawHorizontalLine(0, 16, 128);
  display.drawHorizontalLine(0, 32, 128);
  display.drawHorizontalLine(0, 48, 128);
  display.drawVerticalLine(64, 16, 64);

  display.setColor(WHITE);
  display.setTextAlignment(TEXT_ALIGN_LEFT);
  display.setFont(ArialMT_Plain_10);
  display.drawString(3, 3, "State");
  display.drawString(80, 3, "B");  
  display.drawString(3, 19, "Coil");
  display.drawString(67, 19, "");
  display.drawString(3, 35, "C L");
  display.drawString(67, 35, "C R");
  display.drawString(3, 51, "RPM L");
  display.drawString(67, 51, "RPM R");

  display.display();
#endif
}

void Display_UpdateNewValues(int state, int batPct, bool connected, int valTL, int valTR, int valML, int valMR, int valBL, int valBR)
{
#ifdef USING_DISPLAY
  display.drawString(35, 3, String(state));
  display.drawString(90, 3, String(batPct));  
  if(connected)
  {
    display.drawString(120, 3, "C");  
  }
  display.drawString(40, 19, String(valTL));
  display.drawString(105, 19, String(valTR));
  display.drawString(40, 35, String(valML));
  display.drawString(105, 35, String(valMR));
  display.drawString(40, 51, String(valBL));
  display.drawString(105, 51, String(valBR));

  display.display();
#endif
}

void Display_ShowInitText(String text)
{
#ifdef USING_DISPLAY
  display.clear();
  display.drawFastImage(19, 3, 90, 39, logo_small);
  display.setColor(WHITE);
  display.setTextAlignment(TEXT_ALIGN_LEFT);
  display.setFont(ArialMT_Plain_10);
  display.drawString(5, 45, text);

  display.display();
#endif
}


void Display_ShowText(int16_t posX, int16_t posY, String text)
{
#ifdef USING_DISPLAY
  display.setColor(WHITE);
  display.setTextAlignment(TEXT_ALIGN_LEFT);
  display.drawString(posX, posY, text);
  display.setFont(ArialMT_Plain_10);

  display.display();
#endif
}

void Display_Clear()
{
#ifdef USING_DISPLAY
  display.clear();
#endif
}