#include "display.h"
#include "configuration.h"
#include <SPI.h>
#include <Wire.h>               // Only needed for Arduino 1.6.5 and earlier
#include "SSD1306Wire.h"        // legacy: #include "SSD1306.h"

// Initialize the OLED display using Arduino Wire:
SSD1306Wire display(0x3c, 5, 4);

// 'logo_small', 90x39px
#ifdef USING_DISPLAY
static const uint8_t logo_small[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x80, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xC0, 0xFF, 0x8F, 0x7F, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 
  0xE0, 0xFF, 0xDF, 0xFF, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 
  0xE0, 0x01, 0xFE, 0xFF, 0x83, 0x3F, 0x00, 0x07, 0x10, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xF8, 0xC3, 0xC3, 0x7F, 0x80, 0x0F, 0x38, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xF0, 0x81, 0xC7, 0x7F, 0x80, 0x0F, 0x38, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xF0, 0x01, 0xC7, 0x01, 0x80, 0x1F, 0x38, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xF0, 0x01, 0xC7, 0x01, 0x80, 0x1F, 0x38, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xF8, 0x81, 0xC7, 0x01, 0x80, 0x3F, 0x38, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xFE, 0xE1, 0xC7, 0x01, 0x80, 0x3B, 0x38, 0x00, 0x00, 0x00, 
  0xE0, 0xC0, 0xFF, 0xFD, 0xC3, 0x01, 0x80, 0x3B, 0x38, 0x00, 0x00, 0x00, 
  0xE0, 0xFF, 0xDF, 0xFF, 0xC1, 0x01, 0x80, 0x7B, 0x38, 0x00, 0x00, 0x00, 
  0xE0, 0xFF, 0xC7, 0x7F, 0xC0, 0xFF, 0x81, 0x73, 0x38, 0x00, 0x00, 0x00, 
  0xE0, 0x7F, 0xC0, 0x0F, 0xC0, 0xFF, 0x83, 0xF3, 0x38, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xC0, 0x0F, 0xE0, 0xFF, 0x83, 0xE3, 0x38, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xC0, 0x0F, 0xE0, 0x01, 0x80, 0xE3, 0x39, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xC0, 0x1F, 0xE0, 0x00, 0x80, 0xC3, 0x39, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xC0, 0x3D, 0xE0, 0x00, 0x80, 0xC3, 0x3B, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xC0, 0x39, 0xE0, 0x00, 0x80, 0x83, 0x3B, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xE0, 0x79, 0xE0, 0x00, 0x80, 0x83, 0x3F, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xE0, 0x71, 0xE0, 0x00, 0x80, 0x03, 0x3F, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xE0, 0xF0, 0xF0, 0x00, 0x80, 0x03, 0x3F, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xE0, 0xE0, 0xF1, 0x00, 0x80, 0x03, 0x3E, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xE0, 0xC0, 0x71, 0x00, 0x80, 0x03, 0x3E, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xE0, 0xC0, 0xF3, 0x7F, 0x80, 0x03, 0x3C, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0xE0, 0x80, 0xF3, 0xFF, 0x80, 0x03, 0x3C, 0x00, 0x00, 0x00, 
  0xC0, 0x00, 0xE0, 0x80, 0xE7, 0xFF, 0x80, 0x03, 0x3C, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xC0, 0x00, 0x07, 0x00, 0x80, 0x03, 0x38, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x38, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x30, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};
#endif


void Display_Init()
{
#ifdef USING_DISPLAY
  // Initialising the UI will init the display too.
  display.init();

  display.flipScreenVertically();
  display.setFont(ArialMT_Plain_10);

  Serial.println("Display initialized.");
#endif
}

void Display_SetupBase()
{
#ifdef USING_DISPLAY
  display.drawHorizontalLine(0, 16, 128);
  display.drawHorizontalLine(0, 32, 128);
  display.drawHorizontalLine(0, 48, 128);
  display.drawVerticalLine(64, 16, 64);

  display.setColor(WHITE);
  display.setTextAlignment(TEXT_ALIGN_LEFT);
  display.setFont(ArialMT_Plain_10);
  display.drawString(3, 3, "State");
  display.drawString(80, 3, "B");  
  display.drawString(3, 19, "Coil");
  display.drawString(67, 19, "u_k");
  display.drawString(3, 35, "C L");
  display.drawString(67, 35, "C R");
  display.drawString(3, 51, "sp L");
  display.drawString(67, 51, "sp R");

  display.display();
#endif
}

void Display_UpdateNewValues(int state, int batPct, bool connected, int valTL, int valTR, int valML, int valMR, int valBL, int valBR)
{
#ifdef USING_DISPLAY
  display.drawString(35, 3, String(state));
  display.drawString(90, 3, String(batPct));  
  if(connected)
  {
    display.drawString(120, 3, "C");  
  }
  display.drawString(40, 19, String(valTL));
  display.drawString(105, 19, String(valTR));
  display.drawString(40, 35, String(valML));
  display.drawString(105, 35, String(valMR));
  display.drawString(40, 51, String(valBL));
  display.drawString(105, 51, String(valBR));

  display.display();
#endif
}

void Display_ShowInitText(String text)
{
#ifdef USING_DISPLAY
  display.clear();
  display.drawXbm(19, 3, 90, 39, logo_small);
  display.setColor(WHITE);
  display.setTextAlignment(TEXT_ALIGN_LEFT);
  display.setFont(ArialMT_Plain_10);
  display.drawString(5, 45, text);

  display.display();
#endif
}


void Display_ShowText(int16_t posX, int16_t posY, String text)
{
#ifdef USING_DISPLAY
  display.setColor(WHITE);
  display.setTextAlignment(TEXT_ALIGN_LEFT);
  display.drawString(posX, posY, text);
  display.setFont(ArialMT_Plain_10);

  display.display();
#endif
}

void Display_Clear()
{
#ifdef USING_DISPLAY
  display.clear();
#endif
}